// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
const translations = {
    en: {
        'myPortfolio': 'MyPortfolio',
        'home': 'Home',
        'about': 'About',
        'skills': 'Skills',
        'projects': 'Projects',
        'contact': 'Contact',
        'heroTitle': "Hi, I'm <span class='highlight'>Yuri</span>",
        'heroSubtitle': 'Frontend Developer',
        'heroDescription': 'I create modern and responsive websites with clean code and creative design',
        'myWorks': 'My Works',
        'contactMe': 'Contact Me',
        'aboutTitle': 'About Me',
        'aboutText1': 'Hello! I\'m a frontend developer with a passion for creating intuitive and beautiful web interfaces.',
        'aboutText2': 'I enjoy turning complex tasks into simple, beautiful and intuitive designs. I strive to write clean, efficient and scalable code.',
        'aboutText3': 'When I\'m not coding, you can find me learning new technologies, reading IT literature or outdoors with a camera.',
        'completedProjects': 'Completed Projects',
        'yearsExperience': 'Years Experience',
        'happyClients': 'Happy Clients',
        'myTechStack': 'My Tech Stack:',
        'skillsTitle': 'My Skills',
        'projectsTitle': 'My Projects',
        'project1Title': 'E-commerce Store',
        'project1Desc': 'Full-featured online store with shopping cart, filters and responsive design.',
        'project2Title': 'Portfolio Website',
        'project2Desc': 'Modern and responsive portfolio site with animations and smooth scrolling.',
        'project3Title': 'Weather App',
        'project3Desc': 'Weather application with API integration and geolocation.',
        'project4Title': 'Task Manager',
        'project4Desc': 'Task management application with drag-and-drop and localStorage.',
        'viewProject': 'üëÅÔ∏è View',
        'viewCode': '‚ö° Code',
        'contactTitle': 'Contact Me',
        'letsWork': 'Let\'s work together!',
        'contactText': 'I\'m always open to discussing new projects and collaboration opportunities.',
        'email': 'Email',
        'phone': 'Phone',
        'location': 'Location',
        'yourName': 'Your Name',
        'yourEmail': 'Your Email',
        'subject': 'Subject',
        'yourMessage': 'Your Message',
        'sendMessage': 'Send Message',
        'footerText': '¬© 2025 MyPortfolio. All rights reserved.'
    },
    ru: {
        'myPortfolio': '–ú–æ—ë–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ',
        'home': '–ì–ª–∞–≤–Ω–∞—è',
        'about': '–û–±–æ –º–Ω–µ',
        'skills': '–ù–∞–≤—ã–∫–∏',
        'projects': '–ü—Ä–æ–µ–∫—Ç—ã',
        'contact': '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
        'heroTitle': "–ü—Ä–∏–≤–µ—Ç, —è <span class='highlight'>–Æ—Ä–∏–π</span>",
        'heroSubtitle': 'Frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫',
        'heroDescription': '–°–æ–∑–¥–∞—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ responsive –≤–µ–±-—Å–∞–π—Ç—ã —Å —á–∏—Å—Ç—ã–º –∫–æ–¥–æ–º –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º',
        'myWorks': '–ú–æ–∏ —Ä–∞–±–æ—Ç—ã',
        'contactMe': '–°–≤—è–∑–∞—Ç—å—Å—è',
        'aboutTitle': '–û–±–æ –º–Ω–µ',
        'aboutText1': '–ü—Ä–∏–≤–µ—Ç! –Ø frontend-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å passion –∫ —Å–æ–∑–¥–∞–Ω–∏—é –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã—Ö –∏ –∫—Ä–∞—Å–∏–≤—ã—Ö –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.',
        'aboutText2': '–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –ø—Ä–æ—Å—Ç—ã–µ, –∫—Ä–∞—Å–∏–≤—ã–µ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã. –Ø —Å—Ç—Ä–µ–º–ª—é—Å—å –ø–∏—Å–∞—Ç—å —á–∏—Å—Ç—ã–π, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã–π –∫–æ–¥.',
        'aboutText3': '–ö–æ–≥–¥–∞ —è –Ω–µ –∫–æ–¥–∏—Ä—É—é, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –º–µ–Ω—è –∑–∞ –∏–∑—É—á–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, —á—Ç–µ–Ω–∏–µ–º IT-–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã –∏–ª–∏ –Ω–∞ –ø—Ä–∏—Ä–æ–¥–µ —Å —Ñ–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç–æ–º.',
        'completedProjects': '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤',
        'yearsExperience': '–ì–æ–¥–∞ –æ–ø—ã—Ç–∞',
        'happyClients': '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        'myTechStack': '–ú–æ–π —Å—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π:',
        'skillsTitle': '–ú–æ–∏ –Ω–∞–≤—ã–∫–∏',
        'projectsTitle': '–ú–æ–∏ –ø—Ä–æ–µ–∫—Ç—ã',
        'project1Title': '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω',
        'project1Desc': '–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω —Å –∫–æ—Ä–∑–∏–Ω–æ–π, —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º.',
        'project2Title': '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å–∞–π—Ç',
        'project2Desc': '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ responsive —Å–∞–π—Ç-–ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏ –∏ smooth scrolling.',
        'project3Title': 'Weather App',
        'project3Desc': '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã —Å API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π.',
        'project4Title': 'Task Manager',
        'project4Desc': '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å drag-and-drop –∏ localStorage.',
        'viewProject': 'üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å',
        'viewCode': '‚ö° –ö–æ–¥',
        'contactTitle': '–°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π',
        'letsWork': '–î–∞–≤–∞–π—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ!',
        'contactText': '–Ø –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞.',
        'email': 'Email',
        'phone': '–¢–µ–ª–µ—Ñ–æ–Ω',
        'location': '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
        'yourName': '–í–∞—à–µ –∏–º—è',
        'yourEmail': '–í–∞—à email',
        'subject': '–¢–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è',
        'yourMessage': '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        'sendMessage': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
        'footerText': '¬© 2025 –ú–æ—ë–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.'
    }
};





class PortfolioApp {
    constructor() {
        this.currentLanguage = localStorage.getItem('language') || 'en';
        this.isMenuOpen = false;
        this.init();
    }

    init() {
        this.fixInitialScroll();
        this.applyLanguage(this.currentLanguage);
        this.setupEventListeners();
        this.setupAnimations();
    }

    fixInitialScroll() {
        if (window.location.hash) {
            setTimeout(() => {
                window.scrollTo(0, 0);
            }, 0);
        }
    }

    setupEventListeners() {
        // –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é
        const burger = document.getElementById('burger');
        const navList = document.querySelector('.nav-list');

        
        let overlay = document.querySelector('.overlay');
        if (!overlay) {
            overlay = document.createElement('div');
            overlay.classList.add('overlay');
            document.body.appendChild(overlay);
        }

        if (burger) {
            burger.addEventListener('click', () => this.toggleMenu());
        }

        if (overlay) {
            overlay.addEventListener('click', () => this.closeMenu());
        }

        
        document.querySelectorAll('.nav-list a').forEach(link => {
            link.addEventListener('click', () => this.closeMenu());
        });

        // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ —Å —è–∫–æ—Ä—è–º–∏
        document.querySelectorAll('a[href^="#"]').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = link.getAttribute('href');
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ (–¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö)
                this.closeMenu();
                
                // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞
                this.scrollToSection(targetId);
            });
        });

        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
        const langToggle = document.getElementById('language-toggle');
        if (langToggle) {
            langToggle.addEventListener('click', () => {
                this.toggleLanguage();
            });
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        const contactForm = document.querySelector('.contact-form');
        if (contactForm) {
            contactForm.addEventListener('submit', (e) => this.handleFormSubmit(e));
        }
    }

    toggleMenu() {
        const burger = document.getElementById('burger');
        const navList = document.querySelector('.nav-list');
        const overlay = document.querySelector('.overlay');
        
        this.isMenuOpen = !this.isMenuOpen;
        
        burger?.classList.toggle('active');
        navList?.classList.toggle('active');
        overlay?.classList.toggle('active');
        document.body.style.overflow = this.isMenuOpen ? 'hidden' : '';
    }

    closeMenu() {
        const burger = document.getElementById('burger');
        const navList = document.querySelector('.nav-list');
        const overlay = document.querySelector('.overlay');
        
        burger?.classList.remove('active');
        navList?.classList.remove('active');
        overlay?.classList.remove('active');
        document.body.style.overflow = '';
        this.isMenuOpen = false;
    }

    toggleLanguage() {
        this.currentLanguage = this.currentLanguage === 'en' ? 'ru' : 'en';
        localStorage.setItem('language', this.currentLanguage);
        this.applyLanguage(this.currentLanguage);
    }

    applyLanguage(lang) {
        const data = translations[lang];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å data-i18n
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            if (data[key]) {
                element.innerHTML = data[key];
            }
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
        document.querySelectorAll('[data-i18n-placeholder]').forEach(element => {
            const key = element.getAttribute('data-i18n-placeholder');
            if (data[key]) {
                element.placeholder = data[key];
            }
        });

        // –û–±–Ω–æ–≤–ª—è–µ–º alt —É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const profileImg = document.querySelector('.profile-photo');
        if (profileImg && data['profileAlt']) {
            profileImg.alt = data['profileAlt'];
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç lang
        document.documentElement.lang = lang;
    }

    scrollToSection(sectionId) {
        if (sectionId === '#') return; // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—É—Å—Ç—ã—Ö —è–∫–æ—Ä–µ–π
        
        const section = document.querySelector(sectionId);
        if (section) {
            const headerHeight = document.querySelector('.header').offsetHeight;
            const offsetTop = section.offsetTop - headerHeight;
            
            window.scrollTo({
                top: offsetTop,
                behavior: 'smooth'
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º URL –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            history.pushState(null, null, sectionId);
        }
    }

    handleFormSubmit(e) {
        e.preventDefault();
        alert(this.currentLanguage === 'en' 
            ? 'Thank you for your message! I will contact you soon.' 
            : '–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
        );
        e.target.reset();
    }

    setupAnimations() {
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–≤
        const animateSkills = () => {
            const skillBars = document.querySelectorAll('.skill-progress');
            skillBars.forEach(bar => {
                const width = bar.getAttribute('data-width');
                bar.style.width = width;
            });
        };

        const checkScroll = () => {
            const skillsSection = document.getElementById('skills');
            if (!skillsSection) return;
            
            const sectionPos = skillsSection.getBoundingClientRect();
            const windowHeight = window.innerHeight;
            
            if (sectionPos.top < windowHeight * 0.8) {
                animateSkills();
                window.removeEventListener('scroll', checkScroll);
            }
        };

        const animateOnScroll = () => {
            const elements = document.querySelectorAll('.project-card, .contact-item, .skill-category');
            elements.forEach(element => {
                const elementPos = element.getBoundingClientRect();
                const windowHeight = window.innerHeight;
                
                if (elementPos.top < windowHeight * 0.85) {
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }
            });
        };

        const initAnimations = () => {
            const animatedElements = document.querySelectorAll('.project-card, .contact-item, .skill-category');
            animatedElements.forEach(el => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(50px)';
                el.style.transition = 'all 0.6s ease';
            });
            
            window.addEventListener('scroll', checkScroll);
            window.addEventListener('scroll', animateOnScroll);
            checkScroll();
            animateOnScroll();
        };

        initAnimations();

        // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ hero –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const heroContent = document.querySelector('.hero-content');
        if (heroContent) {
            heroContent.style.opacity = '0';
            heroContent.style.transform = 'translateY(30px)';
            heroContent.style.transition = 'all 0.8s ease';
            
            setTimeout(() => {
                heroContent.style.opacity = '1';
                heroContent.style.transform = 'translateY(0)';
            }, 300);
        }

        

        // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π
        const animateSections = () => {
            const sections = document.querySelectorAll('section');
            sections.forEach(section => {
                const sectionPos = section.getBoundingClientRect();
                const windowHeight = window.innerHeight;
        
                if (sectionPos.top < windowHeight * 0.85) {
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                }
            });
        };
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    new PortfolioApp();
});
